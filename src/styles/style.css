:root {
  --glb-line-width: var(--palette-size-not-font-6xs);
}

* {
  box-sizing: border-box;
  margin: 0;
  font-size: var(--glb-font-size);
  line-height: 1;
  letter-spacing: calc(0.0625rem / 8);
  word-spacing: 0.03125rem;

  color: inherit;
  scroll-behavior: smooth;
}

html {
  background-color: var(--palette-color-gs-6);
  overflow: hidden;
}

:not(i) {
  font-weight: 500;

  body[data-dark-mode='true'] & {
    font-weight: 400;
  }
}

::selection {
  background-color: var(--palette-color-b-d2);
  color: var(--palette-color-gs-0);
}

body {
  --scrollbar-width: var(--palette-size-not-font-3xs);
  --scrollbar-padding: var(--palette-size-not-font-3xs);
  --scrollbar-size: calc(var(--scrollbar-width) + var(--scrollbar-padding) * 2);

  position: relative;

  font-family: var(--palette-font-a);
  color: var(--color-a-content-light);

  transition: background-color var(--palette-time-s) ease-out;

  &::-webkit-scrollbar {
    width: var(--scrollbar-size);
    height: var(--scrollbar-size);

    background-color: transparent;
  }

  &::-webkit-scrollbar-thumb {
    border-radius: var(--palette-size-not-font-6xl);
    border-width: var(--scrollbar-padding);

    border-style: solid;
    border-color: var(--palette-color-gs-0);
    background-color: var(--palette-color-gs-6);
  }

  &::-webkit-scrollbar-thumb:hover {
    background-color: var(--palette-color-gs-10);
  }

  &::-webkit-scrollbar-thumb:active {
    background-color: var(--palette-color-gs-19);
  }

  &[data-dark-mode='true'] {
    color: var(--color-a-content-dark);

    &::-webkit-scrollbar-thumb {
      border-color: var(--palette-color-gs-17);
      background-color: var(--palette-color-gs-14);
    }

    &::-webkit-scrollbar-thumb:hover {
      background-color: var(--palette-color-gs-12);
    }

    &::-webkit-scrollbar-thumb:active {
      background-color: var(--palette-color-gs-0);
    }
  }
}

:is(h1, h2, h3, h4),
:is(h1, h2, h3, h4) > * {
  margin: 0;
  letter-spacing: initial;
  word-spacing: initial;
}

address {
  font-style: initial;
}

ul,
ol {
  padding: 0;

  list-style: none;

  li {
    display: flex;
  }
}

hr {
  border: none;
}

span {
  display: block;
}

input {
  padding: 0;

  outline: none;
}

button {
  padding: 0;

  border: none;
  background-color: transparent;
  cursor: pointer;

  &:disabled {
    box-shadow: initial !important;
    cursor: default;
  }
}

.text {
  line-height: 1.4375;
  text-wrap: pretty;

  strong {
    font-weight: 700;
    color: var(--palette-color-b-d2);

    transition: color var(--palette-time-s) ease-out;

    body[data-dark-mode='true'] & {
      font-weight: 600;
      color: var(--palette-color-b-l2);
    }
  }
}

.paragraphs {
  > * {
    margin-bottom: 1em;
  }

  :last-child {
    margin-bottom: 0;
  }
}

.glass {
  position: relative;
  border-radius: var(--border-radius);

  background-color: rgba(255, 255, 255, 0.375);
  backdrop-filter: blur(0.625rem);

  &::before {
    content: '';
    position: absolute;
    width: 100%;
    height: 100%;
    border-radius: var(--border-radius);

    /* Reflexes */
    background: linear-gradient(
      -30deg,
      rgba(255, 255, 255, 0.1125) 25%,
      rgba(255, 255, 255, 0.225) 75%,
      rgba(255, 255, 255, 0.5625) 100%
    );
  }

  > * {
    position: relative;
    border-radius: var(--border-radius);

    box-shadow: var(--decorator-bevel-highlight);
  }
}

.glass--initial {
  border-radius: 0;

  &::before {
    border-radius: 0;
  }

  > * {
    border-radius: 0;
  }
}

.scrollable {
  --angle: 180deg;

  scrollbar-width: thin;
  scrollbar-color: rgba(122, 122, 122, 0.25) transparent;

  animation: progress-scrolling auto linear;
  animation-timeline: scroll(self);
}

.scrollable--inline {
  --angle: 90deg;

  animation-timeline: scroll(self inline);
}

@keyframes progress-scrolling {
  from {
    mask-image: linear-gradient(
      var(--angle),
      rgba(0, 0, 0, 1) 0%,
      rgba(0, 0, 0, 1) var(--gradient-width),
      rgba(0, 0, 0, 1) calc(100% - var(--gradient-width)),
      rgba(0, 0, 0, 0) 100%
    );
  }
  0.001%,
  99.999% {
    mask-image: linear-gradient(
      var(--angle),
      rgba(0, 0, 0, 0) 0%,
      rgba(0, 0, 0, 1) var(--gradient-width),
      rgba(0, 0, 0, 1) calc(100% - var(--gradient-width)),
      rgba(0, 0, 0, 0) 100%
    );
  }
  to {
    mask-image: linear-gradient(
      var(--angle),
      rgba(0, 0, 0, 0) 0%,
      rgba(0, 0, 0, 1) var(--gradient-width),
      rgba(0, 0, 0, 1) calc(100% - var(--gradient-width)),
      rgba(0, 0, 0, 1) 100%
    );
  }
}

#root {
  height: 100vh;
}
